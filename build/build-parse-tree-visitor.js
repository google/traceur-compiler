// Copyright 2013 Traceur Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

'use strict';

/**
 * @fileoverview This file generates the code for ParseTreeVisitor.js based on
 * a JSON file, which gets passed in on the command line.
 */

var fs = require('fs');
var util = require('./util.js');

printHeader();
printTrees(readTrees());
printEnd();


function printHeader() {
  util.printLicense();
  util.printAutoGenerated();
  util.print(fs.readFileSync('build/parse-tree-visitor.header', 'utf8'));
}

function readTrees() {
  var data = fs.readFileSync(process.argv[2], 'utf-8');
  return util.parseJSON(data);
}

function printTrees(trees) {
  var names = Object.keys(trees);
  names.forEach(function(name) {
    printVisitTree(name, trees[name], trees);
  });
}

function printVisitTree(name, tree, trees) {
  util.print('  visit' + name + '(tree) {');
  printVisitBody(name, tree, trees);
  util.print('  }');
}

function printVisitBody(name, tree, trees) {
  Object.keys(tree).forEach(
    function(fieldName) {
      if (fieldName == 'location') {
        return;
      }
      var fieldType = tree[fieldName][0];
      if (util.isParseTreeType(fieldType, trees)) {
        util.print('    this.visitAny(tree.' + fieldName + ');');
      } else if (util.isParseTreeListType(fieldType, trees)) {
        util.print('    this.visitList(tree.' + fieldName + ');');
      }
    }
  );
}

function printEnd() {
  util.print('}');
}